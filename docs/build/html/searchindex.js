Search.setIndex({"docnames": ["index", "modules", "setup", "statannotations", "statannotations.stats"], "filenames": ["index.rst", "modules.rst", "setup.rst", "statannotations.rst", "statannotations.stats.rst"], "titles": ["Welcome to statannotations\u2019s documentation!", "statannotations", "setup module", "statannotations package", "statannotations.stats package"], "terms": {"packag": [0, 1], "index": 0, "modul": [0, 1], "search": 0, "page": 0, "subpackag": 1, "stat": [1, 3], "submodul": 1, "comparisonscorrect": [1, 3], "statresult": [1, 3], "stattest": [1, 3], "test": [1, 3], "util": 1, "content": 1, "annot": 1, "formatted_output": [1, 3, 4], "print_labels_and_cont": [1, 3], "text": [1, 3], "alpha": [1, 3, 4], "annotate_custom_annot": [1, 3], "apply_and_annot": [1, 3], "apply_test": [1, 3, 4], "comparisons_correct": [1, 3, 4], "configur": [1, 3], "fig": [1, 3], "get_annotations_text": [1, 3], "get_configur": [1, 3], "get_empty_annot": [1, 3], "get_offset_func": [1, 3], "has_type0_comparisons_correct": [1, 3], "loc": [1, 3], "new_plot": [1, 3], "orient": [1, 3], "plot_and_annot": [1, 3], "plot_and_annotate_facet": [1, 3], "print_pvalue_legend": [1, 3], "pvalue_format": [1, 3], "reset_configur": [1, 3], "set_custom_annot": [1, 3], "set_pvalu": [1, 3], "set_pvalues_and_annot": [1, 3], "validate_test_short_nam": [1, 3], "verbos": [1, 3, 4], "pvalueformat": 1, "formatt": [1, 3], "config": [1, 3], "format_data": [1, 3], "correction_format": [1, 3], "print_legend_if_us": [1, 3], "pvalue_format_str": [1, 3], "pvalue_threshold": [1, 3], "simple_format_str": [1, 3], "text_format": [1, 3], "get_corrected_star": [1, 3], "sort_pvalue_threshold": [1, 3], "format_annot": 1, "pval_annotation_text": [1, 3], "simple_text": [1, 3], "invalidparameterserror": [1, 3], "check_is_in": [1, 3], "check_not_non": [1, 3], "check_order_in_data": [1, 3], "check_pairs_in_data": [1, 3], "check_valid_text_format": [1, 3], "empty_dict_if_non": [1, 3], "get_closest": [1, 3], "get_x_valu": [1, 3], "raise_expected_got": [1, 3], "remove_nul": [1, 3], "render_collect": [1, 3], "appli": [3, 4], "document": [3, 4], "check_valid_correction_nam": [3, 4], "get_correction_paramet": [3, 4], "get_validated_comparisons_correct": [3, 4], "adjust": [3, 4], "corrected_signific": [3, 4], "correction_method": [3, 4], "significance_suffix": [3, 4], "from_librari": [3, 4], "short_nam": [3, 4], "wilcoxon": [3, 4], "check_alpha": [3, 4], "check_num_comparison": [3, 4], "check_pvalu": [3, 4], "get_num_comparison": [3, 4], "return_result": [3, 4], "class": [3, 4], "struct": 3, "data": [3, 4], "union": [3, 4], "str": [3, 4], "option": [3, 4], "none": [3, 4], "base": [3, 4], "object": [3, 4], "hold": 3, "link": 3, "an": 3, "properti": [3, 4], "sep": 3, "v": 3, "ax": 3, "pair": 3, "plot": 3, "boxplot": 3, "x": 3, "y": 3, "hue": 3, "order": 3, "hue_ord": 3, "engin": 3, "seaborn": 3, "true": [3, 4], "plot_param": 3, "comput": 3, "statist": [3, 4], "between": 3, "seri": 3, "add": 3, "top": 3, "group": 3, "box": 3, "bar": 3, "The": 3, "same": 3, "exact": 3, "argument": [3, 4], "provid": [3, 4], "function": [3, 4], "must": 3, "pass": [3, 4], "constructor": 3, "thi": [3, 4], "work": 3, "one": [3, 4], "three": 3, "follow": 3, "mode": 3, "custom": 3, "format": [3, 4], "pvalu": [3, 4], "them": 3, "perform": 3, "result": [3, 4], "line_offset": 3, "line_offset_to_group": 3, "text_annot_custom": 3, "paramet": [3, 4], "list": 3, "string": 3, "each": 3, "num_comparison": [3, 4], "auto": 3, "stats_param": [3, 4], "overrid": 3, "number": [3, 4], "comparison": [3, 4], "otherwis": 3, "calcul": 3, "accept": 3, "type": 3, "1": [3, 4], "error": 3, "default": [3, 4], "0": [3, 4], "05": [3, 4], "color": 3, "method": [3, 4], "multipl": [3, 4], "correct": [3, 4], "One": 3, "statsmodel": [3, 4], "multipletest": 3, "w": 3, "fwer": 3, "instanc": [3, 4], "how": 3, "star": 3, "notat": 3, "when": 3, "remov": 3, "signific": 3, "n": 3, "suffix": 3, "i": 3, "ad": 3, "print": 3, "output": 3, "correspond": 3, "replac": 3, "origin": 3, "valu": [3, 4], "us": [3, 4], "line_height": 3, "fraction": 3, "coordin": 3, "line_width": 3, "tupl": 3, "ar": 3, "For": 3, "1e": 3, "4": 3, "3": 3, "2": 3, "simpl": 3, "5": 3, "001": 3, "01": 3, "5e": 3, "show_test_nam": 3, "set": 3, "fals": 3, "show": 3, "short": 3, "name": [3, 4], "text_offset": 3, "point": 3, "test_short_nam": [3, 4], "use_fixed_offset": 3, "static": [3, 4], "have": 3, "initi": 3, "befor": 3, "being": 3, "behavior": [3, 4], "can": 3, "creat": 3, "facetgrid": 3, "map": 3, "classmethod": 3, "posit": 3, "dict": [3, 4], "annotation_func": 3, "annotation_param": 3, "ax_op_befor": 3, "ax_op_aft": 3, "annotate_param": 3, "singl": 3, "call": 3, "compar": 3, "see": 3, "from": [3, 4], "func_nam": 3, "arg": [3, 4], "kwarg": [3, 4], "after": 3, "within": 3, "first": 3, "defin": 3, "onto": 3, "addit": [3, 4], "arrai": 3, "p": 3, "re": 3, "thereof": 3, "threshold": 3, "return": 3, "A": 3, "render": 3, "wa": 3, "short_test_nam": 3, "gener": 3, "displai": 3, "per": 3, "rang": 3, "whether": 3, "except": 3, "valid_valu": 3, "error_typ": 3, "valueerror": 3, "label": 3, "rais": 3, "datafram": 3, "coord": 3, "check": 3, "refer": 3, "exist": 3, "a_list": 3, "assum": 3, "mylist": 3, "sort": 3, "closest": 3, "mynumb": 3, "If": 3, "two": [3, 4], "equal": 3, "close": 3, "smallest": 3, "http": 3, "stackoverflow": 3, "com": 3, "12141511": 3, "9981846": 3, "expect": 3, "for_": 3, "got": 3, "standard": 3, "messag": 3, "instead": 3, "Or": 3, "collect": 3, "callabl": 4, "float": 4, "method_typ": 4, "int": 4, "statsmodels_api": 4, "bool": 4, "corr_kwarg": 4, "test_result_list": 4, "func": 4, "test_descript": 4, "stat_str": 4, "pval": 4, "stat_summari": 4, "test_long_nam": 4, "stat_nam": 4, "test_nam": 4, "group_data1": 4, "group_data2": 4, "equival": 4, "earlier": 4, "version": 4, "get": 4, "sampl": 4, "run": 4, "either": 4, "leven": 4, "mann": 4, "whitnei": 4, "gt": 4, "l": 4, "t": 4, "test_ind": 4, "test_welch": 4, "test_pair": 4, "kruskal": 4, "interfac": 4, "bonferroni": 4, "holm": 4, "benjamini": 4, "hochberg": 4, "yekuti": 4, "interpret": 4, "case": 4, "keyword": 4, "p_valu": 4, "results_arrai": 4}, "objects": {"": [[3, 0, 0, "-", "statannotations"]], "statannotations": [[3, 0, 0, "-", "Annotation"], [3, 0, 0, "-", "Annotator"], [3, 0, 0, "-", "PValueFormat"], [3, 0, 0, "-", "format_annotations"], [4, 0, 0, "-", "stats"], [3, 0, 0, "-", "utils"]], "statannotations.Annotation": [[3, 1, 1, "", "Annotation"]], "statannotations.Annotation.Annotation": [[3, 2, 1, "", "formatted_output"], [3, 3, 1, "", "print_labels_and_content"], [3, 2, 1, "", "text"]], "statannotations.Annotator": [[3, 1, 1, "", "Annotator"]], "statannotations.Annotator.Annotator": [[3, 2, 1, "", "alpha"], [3, 3, 1, "", "annotate"], [3, 3, 1, "", "annotate_custom_annotations"], [3, 3, 1, "", "apply_and_annotate"], [3, 3, 1, "", "apply_test"], [3, 2, 1, "", "comparisons_correction"], [3, 3, 1, "", "configure"], [3, 2, 1, "", "fig"], [3, 3, 1, "", "get_annotations_text"], [3, 3, 1, "", "get_configuration"], [3, 3, 1, "", "get_empty_annotator"], [3, 3, 1, "", "get_offset_func"], [3, 3, 1, "", "has_type0_comparisons_correction"], [3, 2, 1, "", "loc"], [3, 3, 1, "", "new_plot"], [3, 2, 1, "", "orient"], [3, 3, 1, "", "plot_and_annotate"], [3, 3, 1, "", "plot_and_annotate_facets"], [3, 3, 1, "", "print_pvalue_legend"], [3, 2, 1, "", "pvalue_format"], [3, 3, 1, "", "reset_configuration"], [3, 3, 1, "", "set_custom_annotations"], [3, 3, 1, "", "set_pvalues"], [3, 3, 1, "", "set_pvalues_and_annotate"], [3, 2, 1, "", "test"], [3, 3, 1, "", "validate_test_short_name"], [3, 2, 1, "", "verbose"]], "statannotations.PValueFormat": [[3, 1, 1, "", "Formatter"], [3, 1, 1, "", "PValueFormat"], [3, 4, 1, "", "get_corrected_star"], [3, 4, 1, "", "sort_pvalue_thresholds"]], "statannotations.PValueFormat.Formatter": [[3, 3, 1, "", "config"], [3, 3, 1, "", "format_data"]], "statannotations.PValueFormat.PValueFormat": [[3, 3, 1, "", "config"], [3, 2, 1, "", "correction_format"], [3, 3, 1, "", "format_data"], [3, 3, 1, "", "get_configuration"], [3, 3, 1, "", "print_legend_if_used"], [3, 2, 1, "", "pvalue_format_string"], [3, 2, 1, "", "pvalue_thresholds"], [3, 2, 1, "", "simple_format_string"], [3, 2, 1, "", "text_format"]], "statannotations.format_annotations": [[3, 4, 1, "", "pval_annotation_text"], [3, 4, 1, "", "simple_text"]], "statannotations.stats": [[4, 0, 0, "-", "ComparisonsCorrection"], [4, 0, 0, "-", "StatResult"], [4, 0, 0, "-", "StatTest"], [4, 0, 0, "-", "test"], [4, 0, 0, "-", "utils"]], "statannotations.stats.ComparisonsCorrection": [[4, 1, 1, "", "ComparisonsCorrection"], [4, 4, 1, "", "check_valid_correction_name"], [4, 4, 1, "", "get_correction_parameters"], [4, 4, 1, "", "get_validated_comparisons_correction"]], "statannotations.stats.ComparisonsCorrection.ComparisonsCorrection": [[4, 3, 1, "", "apply"], [4, 3, 1, "", "document"]], "statannotations.stats.StatResult": [[4, 1, 1, "", "StatResult"]], "statannotations.stats.StatResult.StatResult": [[4, 3, 1, "", "adjust"], [4, 2, 1, "", "corrected_significance"], [4, 2, 1, "", "correction_method"], [4, 2, 1, "", "formatted_output"], [4, 2, 1, "", "significance_suffix"]], "statannotations.stats.StatTest": [[4, 1, 1, "", "StatTest"], [4, 4, 1, "", "wilcoxon"]], "statannotations.stats.StatTest.StatTest": [[4, 3, 1, "", "from_library"], [4, 2, 1, "", "short_name"]], "statannotations.stats.test": [[4, 4, 1, "", "apply_test"]], "statannotations.stats.utils": [[4, 4, 1, "", "check_alpha"], [4, 4, 1, "", "check_num_comparisons"], [4, 4, 1, "", "check_pvalues"], [4, 4, 1, "", "get_num_comparisons"], [4, 4, 1, "", "return_results"]], "statannotations.utils": [[3, 5, 1, "", "InvalidParametersError"], [3, 4, 1, "", "check_is_in"], [3, 4, 1, "", "check_not_none"], [3, 4, 1, "", "check_order_in_data"], [3, 4, 1, "", "check_pairs_in_data"], [3, 4, 1, "", "check_valid_text_format"], [3, 4, 1, "", "empty_dict_if_none"], [3, 4, 1, "", "get_closest"], [3, 4, 1, "", "get_x_values"], [3, 4, 1, "", "raise_expected_got"], [3, 4, 1, "", "remove_null"], [3, 4, 1, "", "render_collection"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"welcom": 0, "statannot": [0, 1, 3, 4], "": 0, "document": 0, "content": [0, 3, 4], "indic": 0, "tabl": 0, "setup": 2, "modul": [2, 3, 4], "packag": [3, 4], "subpackag": 3, "submodul": [3, 4], "annot": 3, "pvalueformat": 3, "format_annot": 3, "util": [3, 4], "stat": 4, "comparisonscorrect": 4, "statresult": 4, "stattest": 4, "test": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to statannotations\u2019s documentation!": [[0, "welcome-to-statannotations-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "statannotations": [[1, "statannotations"]], "setup module": [[2, "setup-module"]], "statannotations package": [[3, "statannotations-package"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [4, "submodules"]], "statannotations.Annotation module": [[3, "module-statannotations.Annotation"]], "statannotations.Annotator module": [[3, "module-statannotations.Annotator"]], "statannotations.PValueFormat module": [[3, "module-statannotations.PValueFormat"]], "statannotations.format_annotations module": [[3, "module-statannotations.format_annotations"]], "statannotations.utils module": [[3, "module-statannotations.utils"]], "Module contents": [[3, "module-statannotations"], [4, "module-statannotations.stats"]], "statannotations.stats package": [[4, "statannotations-stats-package"]], "statannotations.stats.ComparisonsCorrection module": [[4, "module-statannotations.stats.ComparisonsCorrection"]], "statannotations.stats.StatResult module": [[4, "module-statannotations.stats.StatResult"]], "statannotations.stats.StatTest module": [[4, "module-statannotations.stats.StatTest"]], "statannotations.stats.test module": [[4, "module-statannotations.stats.test"]], "statannotations.stats.utils module": [[4, "module-statannotations.stats.utils"]]}, "indexentries": {"annotation (class in statannotations.annotation)": [[3, "statannotations.Annotation.Annotation"]], "annotator (class in statannotations.annotator)": [[3, "statannotations.Annotator.Annotator"]], "formatter (class in statannotations.pvalueformat)": [[3, "statannotations.PValueFormat.Formatter"]], "invalidparameterserror": [[3, "statannotations.utils.InvalidParametersError"]], "pvalueformat (class in statannotations.pvalueformat)": [[3, "statannotations.PValueFormat.PValueFormat"]], "alpha (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.alpha"]], "annotate() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.annotate"]], "annotate_custom_annotations() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.annotate_custom_annotations"]], "apply_and_annotate() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.apply_and_annotate"]], "apply_test() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.apply_test"]], "check_is_in() (in module statannotations.utils)": [[3, "statannotations.utils.check_is_in"]], "check_not_none() (in module statannotations.utils)": [[3, "statannotations.utils.check_not_none"]], "check_order_in_data() (in module statannotations.utils)": [[3, "statannotations.utils.check_order_in_data"]], "check_pairs_in_data() (in module statannotations.utils)": [[3, "statannotations.utils.check_pairs_in_data"]], "check_valid_text_format() (in module statannotations.utils)": [[3, "statannotations.utils.check_valid_text_format"]], "comparisons_correction (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.comparisons_correction"]], "config() (statannotations.pvalueformat.formatter method)": [[3, "statannotations.PValueFormat.Formatter.config"]], "config() (statannotations.pvalueformat.pvalueformat method)": [[3, "statannotations.PValueFormat.PValueFormat.config"]], "configure() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.configure"]], "correction_format (statannotations.pvalueformat.pvalueformat property)": [[3, "statannotations.PValueFormat.PValueFormat.correction_format"]], "empty_dict_if_none() (in module statannotations.utils)": [[3, "statannotations.utils.empty_dict_if_none"]], "fig (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.fig"]], "format_data() (statannotations.pvalueformat.formatter method)": [[3, "statannotations.PValueFormat.Formatter.format_data"]], "format_data() (statannotations.pvalueformat.pvalueformat method)": [[3, "statannotations.PValueFormat.PValueFormat.format_data"]], "formatted_output (statannotations.annotation.annotation property)": [[3, "statannotations.Annotation.Annotation.formatted_output"]], "get_annotations_text() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.get_annotations_text"]], "get_closest() (in module statannotations.utils)": [[3, "statannotations.utils.get_closest"]], "get_configuration() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.get_configuration"]], "get_configuration() (statannotations.pvalueformat.pvalueformat method)": [[3, "statannotations.PValueFormat.PValueFormat.get_configuration"]], "get_corrected_star() (in module statannotations.pvalueformat)": [[3, "statannotations.PValueFormat.get_corrected_star"]], "get_empty_annotator() (statannotations.annotator.annotator static method)": [[3, "statannotations.Annotator.Annotator.get_empty_annotator"]], "get_offset_func() (statannotations.annotator.annotator class method)": [[3, "statannotations.Annotator.Annotator.get_offset_func"]], "get_x_values() (in module statannotations.utils)": [[3, "statannotations.utils.get_x_values"]], "has_type0_comparisons_correction() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.has_type0_comparisons_correction"]], "loc (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.loc"]], "module": [[3, "module-statannotations"], [3, "module-statannotations.Annotation"], [3, "module-statannotations.Annotator"], [3, "module-statannotations.PValueFormat"], [3, "module-statannotations.format_annotations"], [3, "module-statannotations.utils"], [4, "module-statannotations.stats"], [4, "module-statannotations.stats.ComparisonsCorrection"], [4, "module-statannotations.stats.StatResult"], [4, "module-statannotations.stats.StatTest"], [4, "module-statannotations.stats.test"], [4, "module-statannotations.stats.utils"]], "new_plot() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.new_plot"]], "orient (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.orient"]], "plot_and_annotate() (statannotations.annotator.annotator static method)": [[3, "statannotations.Annotator.Annotator.plot_and_annotate"]], "plot_and_annotate_facets() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.plot_and_annotate_facets"]], "print_labels_and_content() (statannotations.annotation.annotation method)": [[3, "statannotations.Annotation.Annotation.print_labels_and_content"]], "print_legend_if_used() (statannotations.pvalueformat.pvalueformat method)": [[3, "statannotations.PValueFormat.PValueFormat.print_legend_if_used"]], "print_pvalue_legend() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.print_pvalue_legend"]], "pval_annotation_text() (in module statannotations.format_annotations)": [[3, "statannotations.format_annotations.pval_annotation_text"]], "pvalue_format (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.pvalue_format"]], "pvalue_format_string (statannotations.pvalueformat.pvalueformat property)": [[3, "statannotations.PValueFormat.PValueFormat.pvalue_format_string"]], "pvalue_thresholds (statannotations.pvalueformat.pvalueformat property)": [[3, "statannotations.PValueFormat.PValueFormat.pvalue_thresholds"]], "raise_expected_got() (in module statannotations.utils)": [[3, "statannotations.utils.raise_expected_got"]], "remove_null() (in module statannotations.utils)": [[3, "statannotations.utils.remove_null"]], "render_collection() (in module statannotations.utils)": [[3, "statannotations.utils.render_collection"]], "reset_configuration() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.reset_configuration"]], "set_custom_annotations() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.set_custom_annotations"]], "set_pvalues() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.set_pvalues"]], "set_pvalues_and_annotate() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.set_pvalues_and_annotate"]], "simple_format_string (statannotations.pvalueformat.pvalueformat property)": [[3, "statannotations.PValueFormat.PValueFormat.simple_format_string"]], "simple_text() (in module statannotations.format_annotations)": [[3, "statannotations.format_annotations.simple_text"]], "sort_pvalue_thresholds() (in module statannotations.pvalueformat)": [[3, "statannotations.PValueFormat.sort_pvalue_thresholds"]], "statannotations": [[3, "module-statannotations"]], "statannotations.annotation": [[3, "module-statannotations.Annotation"]], "statannotations.annotator": [[3, "module-statannotations.Annotator"]], "statannotations.pvalueformat": [[3, "module-statannotations.PValueFormat"]], "statannotations.format_annotations": [[3, "module-statannotations.format_annotations"]], "statannotations.utils": [[3, "module-statannotations.utils"]], "test (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.test"]], "text (statannotations.annotation.annotation property)": [[3, "statannotations.Annotation.Annotation.text"]], "text_format (statannotations.pvalueformat.pvalueformat property)": [[3, "statannotations.PValueFormat.PValueFormat.text_format"]], "validate_test_short_name() (statannotations.annotator.annotator method)": [[3, "statannotations.Annotator.Annotator.validate_test_short_name"]], "verbose (statannotations.annotator.annotator property)": [[3, "statannotations.Annotator.Annotator.verbose"]], "comparisonscorrection (class in statannotations.stats.comparisonscorrection)": [[4, "statannotations.stats.ComparisonsCorrection.ComparisonsCorrection"]], "statresult (class in statannotations.stats.statresult)": [[4, "statannotations.stats.StatResult.StatResult"]], "stattest (class in statannotations.stats.stattest)": [[4, "statannotations.stats.StatTest.StatTest"]], "adjust() (statannotations.stats.statresult.statresult method)": [[4, "statannotations.stats.StatResult.StatResult.adjust"]], "apply() (statannotations.stats.comparisonscorrection.comparisonscorrection method)": [[4, "statannotations.stats.ComparisonsCorrection.ComparisonsCorrection.apply"]], "apply_test() (in module statannotations.stats.test)": [[4, "statannotations.stats.test.apply_test"]], "check_alpha() (in module statannotations.stats.utils)": [[4, "statannotations.stats.utils.check_alpha"]], "check_num_comparisons() (in module statannotations.stats.utils)": [[4, "statannotations.stats.utils.check_num_comparisons"]], "check_pvalues() (in module statannotations.stats.utils)": [[4, "statannotations.stats.utils.check_pvalues"]], "check_valid_correction_name() (in module statannotations.stats.comparisonscorrection)": [[4, "statannotations.stats.ComparisonsCorrection.check_valid_correction_name"]], "corrected_significance (statannotations.stats.statresult.statresult property)": [[4, "statannotations.stats.StatResult.StatResult.corrected_significance"]], "correction_method (statannotations.stats.statresult.statresult property)": [[4, "statannotations.stats.StatResult.StatResult.correction_method"]], "document() (statannotations.stats.comparisonscorrection.comparisonscorrection method)": [[4, "statannotations.stats.ComparisonsCorrection.ComparisonsCorrection.document"]], "formatted_output (statannotations.stats.statresult.statresult property)": [[4, "statannotations.stats.StatResult.StatResult.formatted_output"]], "from_library() (statannotations.stats.stattest.stattest static method)": [[4, "statannotations.stats.StatTest.StatTest.from_library"]], "get_correction_parameters() (in module statannotations.stats.comparisonscorrection)": [[4, "statannotations.stats.ComparisonsCorrection.get_correction_parameters"]], "get_num_comparisons() (in module statannotations.stats.utils)": [[4, "statannotations.stats.utils.get_num_comparisons"]], "get_validated_comparisons_correction() (in module statannotations.stats.comparisonscorrection)": [[4, "statannotations.stats.ComparisonsCorrection.get_validated_comparisons_correction"]], "return_results() (in module statannotations.stats.utils)": [[4, "statannotations.stats.utils.return_results"]], "short_name (statannotations.stats.stattest.stattest property)": [[4, "statannotations.stats.StatTest.StatTest.short_name"]], "significance_suffix (statannotations.stats.statresult.statresult property)": [[4, "statannotations.stats.StatResult.StatResult.significance_suffix"]], "statannotations.stats": [[4, "module-statannotations.stats"]], "statannotations.stats.comparisonscorrection": [[4, "module-statannotations.stats.ComparisonsCorrection"]], "statannotations.stats.statresult": [[4, "module-statannotations.stats.StatResult"]], "statannotations.stats.stattest": [[4, "module-statannotations.stats.StatTest"]], "statannotations.stats.test": [[4, "module-statannotations.stats.test"]], "statannotations.stats.utils": [[4, "module-statannotations.stats.utils"]], "wilcoxon() (in module statannotations.stats.stattest)": [[4, "statannotations.stats.StatTest.wilcoxon"]]}})